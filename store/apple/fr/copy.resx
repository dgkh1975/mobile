<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Name" xml:space="preserve">
    <value>Bitwarden</value>
    <comment>Max 30 characters</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Bitwarden est le moyen le plus simple et le plus sûr de conserver tous vos identifiants et mots de passe de façon totalement synchronisé sur tous vos appareils. L'application Bitwarden pour iOS vous permet de vous connecter rapidement à n'importe quel site sur votre navigateur favoris tels que Chrome, Safari ou Firefox et est pris en charge par des centaines d'applications parmi les plus populaires.

Le vol de mots de passe est un véritable problème : les sites et les applications que vous utilisez font l'objet d'attaques informatiques permanentes. Des failles de sécurité apparaissent et vos mots de passe peuvent vous être subtilisés. En réutilisant le même mot de passe sur plusieurs applications et sites web, pirates et hackers peuvent accéder facilement à vos e-mails, à votre compte bancaire et au reste de vos comptes en ligne.

Les experts en sécurité informatique préconisent d'utiliser des mots de passe multiples et générés de façon aléatoire pour chaque compte que vous créez. Mais comment gérer tous ces mots de passe ? Grâce à Bitwarden, vous pouvez enfin créer et conserver en toute sécurité vos mots de passe et vos identifiants et y accéder de façon simple et rapide.

Bitwarden conserve tous vos identifiants et mots de passe dans un coffre-fort crypté et synchronisé sur tous vos appareils. Vos données sont encryptés avant d'être synchronisés, ainsi êtes-vous la seule personne à y avoir accès. Ainsi, quand bien même nous souhaiterions y accéder, cela nous est totalement impossible : vos données sont en effet protégées par un système de cryptographie utilisant un chiffrement AES de 256 bits et un algorithme de hachage PBKDF2 SHA-256.

Bitwarden est aussi un logiciel open source et son code accessible à tous sur GitHub. Ainsi chacun est libre d'analyser, de vérifier et de contribuer au code base de Bitwarden !</value>
  <comment>Max 4000 characters</comment>
  </data>
  <data name="Keywords" xml:space="preserve">
    <value>bit warden,8bit,mot de passe,gestionnaire de mots de passe gratuit, gestionnaire de mots de passe,gestionnaire d'identifiants</value>
    <comment>Max 100 characters</comment>
  </data>
  <data name="Screenshot1" xml:space="preserve">
    <value>Gérer tous vos identifiants et mots de passe depuis un coffre sécurisé</value>
  </data>
  <data name="Screenshot2" xml:space="preserve">
    <value>Générer automatiquement des mots de passe forts, aléatoires et sécurisés</value>
  </data>
  <data name="Screenshot3" xml:space="preserve">
    <value>Protéger votre coffre avec Touch ID, un code PIN, ou un mot de passe maître</value>
  </data>
  <data name="Screenshot4" xml:space="preserve">
    <value>Remplissage automatique des identifiants depuis Safari, Chrome et des centaines d'autres applications</value>
  </data>
  <data name="Screenshot5" xml:space="preserve">
    <value>Synchroniser et accéder à votre coffre depuis plusieurs appareils</value>
  </data>
</root>
